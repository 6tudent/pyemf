$prog $version
$release_date
Copyright (c) $yearrange $author ($author_email)

$url



ABSTRACT
========

pyemf is a pure python module that provides bindings for an ECMA-234
compliant vector graphics library.  ECMA-234 is the published
interface for the Windows GDI used in the Microsoft windows
environment and, more importantly, natively supported by the
OpenOffice suite of tools.

http://www.ecma-international.org/publications/standards/Ecma-234.htm



PREREQUISITES
=============

python (tested under 2.2, 2.3 and 2.4)



QUICK INSTALL
=============

python setup.py install

Yep, that's pretty much it.



FEATURES
========

Most of the drawing methods of ECMA-234 are supported by pyemf.

Supported
---------

  Drawing parameters:
    GetStockObject, SelectObject, DeleteObject, CreatePen,
    CreateSolidBrush, CreateHatchBrush, SetBkColor, SetBkMode,
    SetPolyFillMode

  Drawing primitives:
    SetPixel, Polyline, Polygon, Rectangle, RoundRect, Ellipse, Arc,
    Chord, Pie, PolyBezier

  Path primitives:
    BeginPath, EndPath, MoveTo, LineTo, PolylineTo, ArcTo,
    PolyBezierTo, CloseFigure, FillPath, StrokePath, StrokeAndFillPath

  Clipping:
    SelectClipPath

  Text:
    CreateFont, SetTextAlign, SetTextColor, TextOut

  Coordinate system transformation:
    SaveDC, RestoreDC, SetWorldTransform, ModifyWorldTransform

Experimental
------------

  Window/Viewport commands:
    SetMapMode, SetViewportOrgEx, GetViewportOrgEx, SetViewportExtEx,
    ScaleViewportExtEx, GetViewportExtEx, SetWindowOrgEx,
    GetWindowOrgEx, SetWindowExtEx, ScaleWindowExtEx, GetWindowExtEx

Unsupported
-----------

  Palettes
  Bitmaps
  Text metrics



DOCUMENTATION
=============

The most current documentation is always available on the web at
$url/api/index.html

Or, in the source distribution, the directory website/api/ contains a
copy of the api documentation for version $version.  Simply point your
web browser at the index.html within that directory.



EXAMPLES
========

Creating an EMF
---------------

Here's a simple program (available as test-1.py in the distribution)
that connects opposite corners of an 8in by 6in rectangle with lines:

#!/usr/bin/env python

import pyemf

width=8
height=6
dpi=300

emf=pyemf.EMF(width,height,dpi)
thin=emf.CreatePen(pyemf.PS_SOLID,1,(0x01,0x02,0x03))
emf.SelectObject(thin)
emf.Polyline([(0,0),(width*dpi,height*dpi)])
emf.Polyline([(0,height*dpi),(width*dpi,0)])
emf.save("test1.emf")


Examining an EMF
----------------

pyemf, when run as a standalone program, has the ability to read an
EMF and print out the contents.  Run:

$ pyemf.py -v test1.emf

and it will print out a text summary of all the metafile records in
the file.


Other tests
-----------

There are many other tests included in the examples/ directory in the
source distribution.  After installing the pyemf library, you should
be able to run them like this:

$ cd examples
$ python test5.py

and examine the output file 'test5.emf' by loading it in OpenOffice
Impress.



KNOWN ISSUES
============

See the website at $url/roadmap.html for more
information on the unsupported parts of the ECMA-234 standard.



DISCLAIMER
==========

$prog, Copyright (c) $year $author ($author_email)

$prog comes with ABSOLUTELY NO WARRANTY; for details see the
file COPYING included in the source distribution, or see the web site
http://www.gnu.org/copyleft/lesser.html for more information.
